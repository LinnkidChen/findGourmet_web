{"remainingRequest":"/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/node_modules/babel-loader/lib/index.js!/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/src/components/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/src/components/Login.vue","mtime":1608238814000},{"path":"/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/node_modules/cache-loader/dist/cjs.js","mtime":1670653172899},{"path":"/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/node_modules/babel-loader/lib/index.js","mtime":1670653173065},{"path":"/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/node_modules/cache-loader/dist/cjs.js","mtime":1670653172899},{"path":"/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/node_modules/vue-loader/lib/index.js","mtime":1670653169666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3RvbmdjaGVuL0Rvd25sb2Fkcy9maW5kR291cm1ldF93ZWIvZmluZEdvdXJtZXQvZnJvbnRfZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICAvLyDnmbvlvZXooajljZXmlbDmja7nu5Hlrprlr7nosaEKICAgICAgbG9naW5Gb3JtOiB7CiAgICAgICAgdXNlcm5hbWU6ICcnLAogICAgICAgIHBhc3N3b3JkOiAnJwogICAgICB9LAogICAgICAvLyDooajljZXpqozor4Hop4TliJkKICAgICAgbG9naW5Gb3JtUnVsZXM6IHsKICAgICAgICB1c2VybmFtZTogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogJ+ivt+i+k+WFpeeUqOaIt+WQjScsCiAgICAgICAgICB0cmlnZ2VyOiAnYmx1cicKICAgICAgICB9XSwKICAgICAgICBwYXNzd29yZDogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogJ+ivt+i+k+WFpeWvhueggScsCiAgICAgICAgICB0cmlnZ2VyOiAnYmx1cicKICAgICAgICB9XQogICAgICB9CiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgLy8g6YeN572u5Ye95pWwCiAgICByZXNldExvZ2luRm9ybTogZnVuY3Rpb24gcmVzZXRMb2dpbkZvcm0oKSB7CiAgICAgIGNvbnNvbGUubG9nKCfph43nva7lh73mlbDvvJonLCAncmVzZXRMb2dpbkZvcm0oKScpOyAvLyDojrflj5booajljZXnmoTlvJXnlKjlr7nosaHvvIznhLblkI7osIPlj5booajljZXnmoTph43nva7lh73mlbAKCiAgICAgIHRoaXMuJHJlZnMubG9naW5Gb3JtUmVmLnJlc2V0RmllbGRzKCk7CiAgICB9LAogICAgLy8g55m75b2V5Ye95pWwCiAgICBsb2dpbjogZnVuY3Rpb24gbG9naW4oa2luZCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy4kcmVmcy5sb2dpbkZvcm1SZWYudmFsaWRhdGUoIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUodmFsaWQpIHsKICAgICAgICAgIHZhciBxcywgZGF0YSwgdXJsLCBjb25maWcsIHRoYXQ7CiAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgIGlmICh2YWxpZCkgewogICAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCB0aGF0LiRtZXNzYWdlKHsKICAgICAgICAgICAgICAgICAgICBzaG93Q2xvc2U6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ+i+k+WFpeaVsOaNruaXoOaViCcsCiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3dhcm5pbmcnCiAgICAgICAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICAgIC8vIOWmguaenOWQiOS5juinhOiMg+WwsXBvc3TvvIzms6jmhI/mnoTpgKDmlrnms5UKICAgICAgICAgICAgICAgICAgcXMgPSByZXF1aXJlKCdxcycpOwogICAgICAgICAgICAgICAgICBkYXRhID0gcXMuc3RyaW5naWZ5KF90aGlzLmxvZ2luRm9ybSk7CgogICAgICAgICAgICAgICAgICBpZiAoa2luZCA9PSAnYWRtaW4nKSB7CiAgICAgICAgICAgICAgICAgICAgdXJsID0gJy91c2VyL2FkbWluTG9naW4nOwogICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIHVybCA9ICcvdXNlci9sb2dpbic7CiAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgIGNvbmZpZyA9IHsKICAgICAgICAgICAgICAgICAgICBtZXRob2Q6ICdwb3N0JywKICAgICAgICAgICAgICAgICAgICB1cmw6IHVybCwKICAgICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCcKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIGRhdGE6IGRhdGEKICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgICAgdGhhdCA9IF90aGlzOyAvLyDms6jmhI/ov5nph4zpnIDopoHkv53lrZjljp/mnaV0aGlzCgogICAgICAgICAgICAgICAgICBfdGhpcy4kaHR0cChjb25maWcpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSwgZGF0YSwgdXJsKQogICAgICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhLmNvZGUgPT0gJzIwMCcpIHsKICAgICAgICAgICAgICAgICAgICAgIC8vIOWwhueZu+mZhuaIkOWKn+S5i+WQjueahHRva2Vu5L+d5a2Y5Zyoc2Vzc2lvblN0b3JhZ2XkuK0gLS10b2tlbuWPquWcqOW9k+WJjee9keermeaJk+W8gOacn+mXtOeUn+aViCzlhbbku5bmjqXlj6Plv4XpobvnmbvpmYbkuYvlkI7miY3og73orr/pl64KICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5zZXNzaW9uU3RvcmFnZS5zZXRJdGVtKCd0b2tlbicsIHJlc3BvbnNlLmRhdGEuZGF0YSk7IC8vIOagueaNrueUqOaIt+WQjeafpeaJvueUqOaIt+S/oeaBrwoKICAgICAgICAgICAgICAgICAgICAgIHZhciBjb25mID0gewogICAgICAgICAgICAgICAgICAgICAgICBtZXRob2Q6ICdnZXQnLAogICAgICAgICAgICAgICAgICAgICAgICB1cmw6ICcvdXNlci9nZXRCeVVzZXJOYW1lLycgKyB0aGF0LmxvZ2luRm9ybS51c2VybmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICdBdXRob3JpemF0aW9uJzogd2luZG93LnNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ3Rva2VuJykKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfTsKCiAgICAgICAgICAgICAgICAgICAgICB2YXIgYXhpb3MgPSByZXF1aXJlKCdheGlvcycpOwoKICAgICAgICAgICAgICAgICAgICAgIGF4aW9zKGNvbmYpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhLmNvZGUgPT0gMjAwKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgdGhhdC4kcm91dGVyLnB1c2goJy9ob21lJyk7IC8vIOiwg+eUqOaWueazlQogICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEsIHRoYXQubG9naW5Gb3JtKQoKICAgICAgICAgICAgICAgICAgICAgICAgICB0aGF0LiRzdG9yZS5jb21taXQoJ3VzZXIvc2V0X3VzZXJJbmZvJywgcmVzcG9uc2UuZGF0YS5kYXRhKTsKICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhhdC4kbWVzc2FnZSh7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaG93Q2xvc2U6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAn55m75b2V5oiQ5YqfJywKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJwogICAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGF0LiRtZXNzYWdlKHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNob3dDbG9zZTogdHJ1ZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICfnmbvlvZXlpLHotKUnLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2Vycm9yJwogICAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9KVsiY2F0Y2giXShmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoYXQuJG1lc3NhZ2UoewogICAgICAgICAgICAgICAgICAgICAgICAgIHNob3dDbG9zZTogdHJ1ZSwKICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAn6K+35rGC6ZSZ6K+vJywKICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnZXJyb3InCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGF0LiRtZXNzYWdlKHsKICAgICAgICAgICAgICAgICAgICAgICAgc2hvd0Nsb3NlOiB0cnVlLAogICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiByZXNwb25zZS5kYXRhLm1lc3NhZ2UsCiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdlcnJvcicKICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSlbImNhdGNoIl0oZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGF0LiRtZXNzYWdlKHsKICAgICAgICAgICAgICAgICAgICAgIHNob3dDbG9zZTogdHJ1ZSwKICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICfor7fmsYLplJnor68nLAogICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2Vycm9yJwogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgICAgfSkpOwoKICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF94KSB7CiAgICAgICAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICAgIH07CiAgICAgIH0oKSk7CiAgICB9LAogICAgLy8g5rOo5YaM5Ye95pWwCiAgICByZWdpc3RlcjogZnVuY3Rpb24gcmVnaXN0ZXIoKSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvcmVnaXN0ZXInKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Login.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"login_container\">\n        <div class=\"login_box\">\n        <!-- 头像区域 -->\n        <div class=\"avatar_box\">\n            <img src=\"../assets/logo.png\" alt=\"LogoCall\" />\n        </div>\n        <!-- 登录表单区域 -->\n        <el-form\n            ref=\"loginFormRef\"\n            class=\"login_form\"\n            label-width=\"0px\"\n            :model=\"loginForm\"\n            :rules=\"loginFormRules\"\n        >\n            <el-form-item prop=\"username\">\n            <el-input\n                v-model=\"loginForm.username\"\n                prefix-icon=\"el-icon-user-solid\"\n            ></el-input>\n            </el-form-item>\n            <el-form-item prop=\"password\">\n            <el-input\n                v-model=\"loginForm.password\"\n                type=\"password\"\n                prefix-icon=\"el-icon-lock\"\n            ></el-input>\n            </el-form-item>\n            <el-form-item class=\"btns\">\n                <el-button type=\"primary\" @click=\"register()\" style=\"margin-right: 28px\">注册</el-button>\n                <el-button type=\"primary\" @click=\"login('admin')\">管理员登录</el-button>\n                <el-button type=\"primary\" @click=\"login('common')\">用户登录</el-button>\n                <el-button type=\"info\" @click=\"resetLoginForm()\">重置</el-button>\n            </el-form-item>\n        </el-form>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n        // 登录表单数据绑定对象\n        loginForm: {\n            username: '',\n            password: '',\n        },\n        // 表单验证规则\n        loginFormRules: {\n            username: [\n                { required: true, message: '请输入用户名', trigger: 'blur' },\n            ],\n            password: [\n                { required: true, message: '请输入密码', trigger: 'blur' },\n            ],\n        },\n        }\n    },\n    methods: {\n        // 重置函数\n        resetLoginForm() {\n        console.log('重置函数：', 'resetLoginForm()')\n        // 获取表单的引用对象，然后调取表单的重置函数\n        this.$refs.loginFormRef.resetFields()\n        },\n        // 登录函数\n        login(kind) {\n            this.$refs.loginFormRef.validate(async (valid) => {\n                // 如果不合规范直接警告\n                if (!valid) return that.$message({showClose: true, message:'输入数据无效', type: 'warning'})\n                // 如果合乎规范就post，注意构造方法\n                var qs = require('qs')\n                var data = qs.stringify(this.loginForm)\n                if (kind == 'admin') {\n                    var url = '/user/adminLogin'\n                } else {\n                    var url = '/user/login'\n                }\n                var config = {\n                    method: 'post',\n                    url: url,\n                    headers: {\n                        'Content-Type': 'application/x-www-form-urlencoded',\n                    },\n                    data: data,\n                }\n                var that = this // 注意这里需要保存原来this\n                this.$http(config)\n                .then(function (response) {\n                    // console.log(response.data, data, url)\n                    if (response.data.code == '200') {\n                        // 将登陆成功之后的token保存在sessionStorage中 --token只在当前网站打开期间生效,其他接口必须登陆之后才能访问\n                        window.sessionStorage.setItem('token', response.data.data)\n                        // 根据用户名查找用户信息\n                        var conf = {\n                                method: 'get',\n                                url: '/user/getByUserName/'+that.loginForm.username,\n                                headers: {\n                                    'Authorization': window.sessionStorage.getItem('token')\n                                },\n                            }\n                        var axios = require('axios');\n                        axios(conf)\n                        .then(function(response) {\n                            // console.log(response.data)\n                            if (response.data.code == 200) {\n                                that.$router.push('/home')\n                                // 调用方法\n                                // console.log(response.data, that.loginForm)\n                                that.$store.commit('user/set_userInfo', response.data.data)\n                                return that.$message({ showClose: true, message: '登录成功', type: 'success' })\n                            } else {\n                                return that.$message({showClose: true, message: '登录失败', type: 'error'})\n                            }\n                        })\n                        .catch(function(response) {\n                            return that.$message({showClose: true, message:'请求错误', type: 'error'})\n                        })\n                    } else {\n                        return that.$message({showClose: true, message: response.data.message, type: 'error'})\n                    }\n                    \n                })\n                .catch(function (error) {\n                    console.log(error)\n                    return that.$message({showClose: true, message:'请求错误', type: 'error'})\n                })\n            })\n        },\n        // 注册函数\n        register() {\n            this.$router.push('/register')\n        },\n    },\n    }\n</script>\n\n<style lang=\"less\" scoped>\n// scoped 表示css只在本组件生效\n.login_container {\n  background-color: gray;\n  height: 100%;\n}\n.login_box {\n  width: 450px;\n  height: 300px;\n  background-color: white;\n  border-radius: 3px;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n}\n.avatar_box {\n  height: 130px;\n  width: 130px;\n  border-radius: 50%;\n  border: 1px solid #eeeeee;\n  padding: 10px;\n  box-shadow: 0 0 10px #dddddd;\n  box-sizing: content-box;\n  //  居中显示\n  transform: translateY(-40%);\n  margin: auto;\n  // 居中显示2\n  /* position: absolute;\n  left: 50%;\n  transform: translate(-50%, -40%); */\n  background-color: white;\n  img {\n    height: 100px;\n    border-radius: 30%;\n    padding: 10% 10% 10% 6%;\n  }\n}\n\n// 表单位置显示\n.login_form {\n  padding: 0 20px;\n  position: absolute;\n  /* transform: translateY(-20%); */\n  box-sizing: border-box;\n  bottom: 0;\n  width: 100%;\n}\n// 靠右显示\n.btns {\n  display: flex;\n  justify-content: flex-end;\n}\n</style>\n"],"sourceRoot":"src/components"}]}