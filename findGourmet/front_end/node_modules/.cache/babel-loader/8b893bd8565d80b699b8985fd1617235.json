{"remainingRequest":"/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/node_modules/babel-loader/lib/index.js!/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/src/components/Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/src/components/Register.vue","mtime":1608238814000},{"path":"/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/node_modules/cache-loader/dist/cjs.js","mtime":1670653172899},{"path":"/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/node_modules/babel-loader/lib/index.js","mtime":1670653173065},{"path":"/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/node_modules/cache-loader/dist/cjs.js","mtime":1670653172899},{"path":"/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/node_modules/vue-loader/lib/index.js","mtime":1670653169666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Register.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <el-container class=\"container\">\n        <el-header class=\"header\">注册界面</el-header>\n        \n        <el-main class=\"main\">\n        <el-form :model=\"registerForm\" :rules=\"registerRules\" ref=\"registerFormRef\" label-width=\"100px\" class=\"demo-registerForm\" >\n            <el-form-item label=\"用户名\" prop=\"username\">\n                <el-input v-model=\"registerForm.username\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"密码\" prop=\"password\">\n                <el-input v-model=\"registerForm.password\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"用户类型\" prop=\"userType\">\n            <el-select v-model=\"registerForm.userType\" placeholder=\"请选择用户类型\" >\n                <el-option label=\"系统管理员\" value=\"false\" :disabled=\"true\"></el-option>\n                <el-option label=\"普通用户\" value=\"true\"></el-option>\n            </el-select>\n            </el-form-item>\n            <el-form-item label=\"用户姓名\" prop=\"name\">\n                <el-input v-model=\"registerForm.name\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"证件类型\" prop=\"documentTypeId\">\n                <el-select v-model=\"registerForm.documentTypeId\" placeholder=\"请选择证件类型\" >\n                    <!-- 动态获取证件类型下拉列表 :key好像没有很大作用？-->\n                    <el-option\n                        v-for=\"item in documentTypeOption\"\n                        :key=\"item.documentTypeId\"\n                        :label=\"item.documentTypeName\"\n                        :value=\"item.documentTypeId\"\n                    >\n                    </el-option>\n                </el-select>\n            </el-form-item>\n            <el-form-item label=\"证件号码\" prop=\"documentNumber\">\n                <el-input v-model=\"registerForm.documentNumber\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"手机号码\" prop=\"phoneNumber\">\n                <el-input v-model=\"registerForm.phoneNumber\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"用户简介\" prop=\"introduce\">\n                <el-input type=\"textarea\" v-model=\"registerForm.introduce\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"城市\" prop=\"cityId\">\n                <el-select v-model=\"registerForm.cityId\" placeholder=\"请选择您的城市\" >\n                    <!-- 动态获取城市类型下拉列表 -->\n                    <el-option\n                        v-for=\"item in cityOption\"\n                        :key=\"item.cityId\"\n                        :label=\"item.cityName\"\n                        :value=\"item.cityId\"\n                    >\n                    </el-option>\n                </el-select>\n            </el-form-item>\n            <!-- 提交按钮 -->\n            <el-form-item>\n                <el-button type=\"primary\" @click=\"submitForm('registerForm')\">立即注册</el-button>\n                <el-button @click=\"resetForm('registerForm')\">重置</el-button>\n            </el-form-item>\n        </el-form>\n        </el-main>\n    </el-container>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n        // 注册表单\n        registerForm: {\n            username: '',\n            password: '',\n            userType: '',\n            name: '',\n            documentTypeId: '',\n            documentNumber: '',\n            phoneNumber: '15577778888',\n            level: 1,\n            introduce: '',\n            cityId: '',\n        },\n        documentTypeOption: [], // 证件类型列表\n        cityOption: [],         // 城市列表\n        // 表单规则\n        registerRules: {\n            username: [\n                { required: true, message: '请输入用户名', trigger: 'blur' },\n            ],\n            password: [\n                { required: true, message: '请输出密码', trigger: 'blur' },\n                { validator: this.check_pwd, trigger: 'blur' },\n            ],\n            userType: [\n                { required: true, message: '请选择用户类型', trigger: 'blur' },\n            ],\n            name: [\n                { required: true, message: '请输入用户姓名', trigger: 'blur' }\n            ],\n            documentTypeId: [\n                { required: true, message: '请选择证件类型', trigger: 'blur' },\n            ],\n            documentNumber: [\n                { required: true, validator: this.check_cardType, trigger: 'blur' },\n            ],\n            phoneNumber: [\n                { required: true, validator: this.check_phone, trigger: 'blur' },\n            ],\n            cityId: [\n                { required: true, message: '请选择城市名称', trigger: 'blur' }\n            ],\n        },\n        }\n    },\n    created() {\n        /* \n        // 如果使用这个调用这个接口需要安装redis\n        var that = this\n        this.$http.get('/user/getDocuments')\n        .then(function(response) {\n            if (response.data.code == 200) {\n                that.documentTypeOption = response.data.data\n            } else {\n                that.$message({showClose: true, message: response.data.message, type: 'warning'})\n            }\n        })\n        .catch(function(response) {\n            that.$message({showClose: true, message: \"请求错误\", type: 'error'})\n        })\n        this.$http.get('/user/getCitys')\n        .then(function(response) {\n            if (response.data.code == 200) {\n                that.cityOption = response.data.data\n            } else {\n                that.$message({showClose: true, message: response.data.message, type: 'warning'})\n            }\n        })\n        .catch(function(response) {\n            that.$message({showClose: true, message: \"请求错误\", type: 'error'})\n        }) */\n        this.documentTypeOption = [\n            {\n              \"documentTypeId\": 1,\n              \"documentTypeName\": \"身份证\"\n            },\n            {\n              \"documentTypeId\": 2,\n              \"documentTypeName\": \"学生证\"\n            }\n        ]\n        this.cityOption = [\n            {\n              \"cityId\": 1,\n              \"cityName\": \"北京\"\n            },\n            {\n              \"cityId\": 2,\n              \"cityName\": \"上海\"\n            }\n        ]\n    },\n    methods: {\n        // 自定义校验规则，检查密码\n        check_pwd(rule, value, callback) {\n            // rule 对应使用bargainMoney自定义验证的 对象\n            // value 对应使用bargainMoney自定义验证的 数值\n            // callback 回调函数\n            var regex = new RegExp(/\\d/, 'g')\n            if (String(value).length < 6) {\n                return callback(new Error('长度不能小于6位'))\n            } else if (String(value).match(regex) < 2) {\n                return callback(new Error('必须含有两个数字'))\n            } else if (\n                /^[A-Z]+$/.test(String(value)) ||\n                /^[a-z]+$/.test(String(value))\n            ) {\n                return callback(new Error('不能全是大写字符或小写字符'))\n            } else {\n                return callback()\n            }\n        },\n        // 检查身份证号\n        check_cardType(rule, value, callback) {\n            const r = /\\d{17}[\\d|x]|\\d{15}/\n            const r1 = /^[0-9]*[1-9][0-9]*$/\n            if (String(value).trim() == '') {\n                return callback(new Error('请输入证件号码'))\n            } else if (this.documentTypeId == '1' && !r.test(String(value))) {\n                return callback(new Error('身份证号不合规则'))\n            } else if (this.documentTypeId == '2' && !r1.test(String(value))) {\n                return callback(new Error('学生证不合规则'))\n            } else {\n                return callback()\n            }\n        },\n        // 检查手机号码\n        check_phone(rule, value, callback) {\n            const r = /0?(13|14|15|17|18)[0-9]{9}/\n            if (String(value).trim() == '') {\n                return callback(new Error('请输入手机号'))\n            } else if (!r.test(String(value))) {\n                return callback(new Error('手机号不合规则'))\n            } else {\n                return callback()\n            }\n        },\n\n        submitForm(formName) {\n            var that = this\n            this.$refs.registerFormRef.validate((valid) => {\n                if (!valid)\n                return this.$message({\n                    showClose: true,\n                    message: '输入数据无效',\n                    type: 'warning',\n                })\n                // post配置\n                var config = {\n                    method: 'post',\n                    url: '/user/register',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    data: JSON.stringify(this.registerForm),\n                }\n                // 向服务器发起请求\n                this.$http(config)\n                .then(function (response) {\n                    // console.log(response.data)\n                    if (response.data.code == '200') {\n                        that.$message({ showClose: true, message: '注册成功',type: 'success'})\n                        that.$router.push('/login')\n                    } else {\n                        that.$message({showClose: true, message: response.data.message, type: 'error'})\n                    }\n                })\n                .catch(function (error) {\n                    console.log(error)\n                    return that.$message({showClose: true, message:'请求错误', type: 'error'})\n                })\n            })\n        },\n        resetForm(formName) {\n            this.$refs.registerFormRef.resetFields()\n        },\n    },\n}\n</script>\n\n<style lang=\"less\" scoped>\n.container {\n    height: 100%;\n}\n.header {\n    text-align: center;\n    font-size: 40px;\n    background-color: darkgrey;\n}\n.main {\n    height: 100%;\n    width: 700px;\n    margin: auto;\n}\n</style>\n"],"sourceRoot":"src/components"}]}