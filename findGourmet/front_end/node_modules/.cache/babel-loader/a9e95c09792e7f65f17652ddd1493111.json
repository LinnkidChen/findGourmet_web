{"remainingRequest":"/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/node_modules/babel-loader/lib/index.js!/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/src/components/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/src/components/Login.vue","mtime":1670655814062},{"path":"/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/node_modules/cache-loader/dist/cjs.js","mtime":1670653172899},{"path":"/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/node_modules/babel-loader/lib/index.js","mtime":1670653173065},{"path":"/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/node_modules/cache-loader/dist/cjs.js","mtime":1670653172899},{"path":"/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/node_modules/vue-loader/lib/index.js","mtime":1670653169666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3RvbmdjaGVuL0Rvd25sb2Fkcy9maW5kR291cm1ldF93ZWIvZmluZEdvdXJtZXQvZnJvbnRfZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICAvLyDnmbvlvZXooajljZXmlbDmja7nu5Hlrprlr7nosaEKICAgICAgbG9naW5Gb3JtOiB7CiAgICAgICAgdXNlcm5hbWU6ICcnLAogICAgICAgIHBhc3N3b3JkOiAnJwogICAgICB9LAogICAgICAvLyDooajljZXpqozor4Hop4TliJkKICAgICAgbG9naW5Gb3JtUnVsZXM6IHsKICAgICAgICB1c2VybmFtZTogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogJ+ivt+i+k+WFpeeUqOaIt+WQjScsCiAgICAgICAgICB0cmlnZ2VyOiAnYmx1cicKICAgICAgICB9XSwKICAgICAgICBwYXNzd29yZDogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogJ+ivt+i+k+WFpeWvhueggScsCiAgICAgICAgICB0cmlnZ2VyOiAnYmx1cicKICAgICAgICB9XQogICAgICB9CiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgLy8g6YeN572u5Ye95pWwCiAgICByZXNldExvZ2luRm9ybTogZnVuY3Rpb24gcmVzZXRMb2dpbkZvcm0oKSB7CiAgICAgIGNvbnNvbGUubG9nKCfph43nva7lh73mlbDvvJonLCAncmVzZXRMb2dpbkZvcm0oKScpOyAvLyDojrflj5booajljZXnmoTlvJXnlKjlr7nosaHvvIznhLblkI7osIPlj5booajljZXnmoTph43nva7lh73mlbAKCiAgICAgIHRoaXMuJHJlZnMubG9naW5Gb3JtUmVmLnJlc2V0RmllbGRzKCk7CiAgICB9LAogICAgLy8g55m75b2V5Ye95pWwCiAgICBsb2dpbjogZnVuY3Rpb24gbG9naW4oa2luZCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy4kcmVmcy5sb2dpbkZvcm1SZWYudmFsaWRhdGUoIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUodmFsaWQpIHsKICAgICAgICAgIHZhciBxcywgZGF0YSwgdXJsLCBjb25maWcsIHRoYXQ7CiAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgIGlmICh2YWxpZCkgewogICAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCB0aGF0LiRtZXNzYWdlKHsKICAgICAgICAgICAgICAgICAgICBzaG93Q2xvc2U6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ+i+k+WFpeaVsOaNruaXoOaViCcsCiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3dhcm5pbmcnCiAgICAgICAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICAgIC8vIOWmguaenOWQiOS5juinhOiMg+WwsXBvc3TvvIzms6jmhI/mnoTpgKDmlrnms5UKICAgICAgICAgICAgICAgICAgcXMgPSByZXF1aXJlKCdxcycpOwogICAgICAgICAgICAgICAgICBkYXRhID0gcXMuc3RyaW5naWZ5KF90aGlzLmxvZ2luRm9ybSk7CgogICAgICAgICAgICAgICAgICBpZiAoa2luZCA9PSAnYWRtaW4nKSB7CiAgICAgICAgICAgICAgICAgICAgdXJsID0gJy9hcGkvdXNlci9hZG1pbkxvZ2luJzsKICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICB1cmwgPSAnL2FwaS91c2VyL2xvZ2luJzsKICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgY29uZmlnID0gewogICAgICAgICAgICAgICAgICAgIG1ldGhvZDogJ3Bvc3QnLAogICAgICAgICAgICAgICAgICAgIHVybDogdXJsLAogICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJwogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgZGF0YTogZGF0YQogICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgICB0aGF0ID0gX3RoaXM7IC8vIOazqOaEj+i/memHjOmcgOimgeS/neWtmOWOn+adpXRoaXMKCiAgICAgICAgICAgICAgICAgIF90aGlzLiRodHRwKGNvbmZpZykudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhLCBkYXRhLCB1cmwpOwoKICAgICAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5jb2RlID09ICcyMDAnKSB7CiAgICAgICAgICAgICAgICAgICAgICAvLyDlsIbnmbvpmYbmiJDlip/kuYvlkI7nmoR0b2tlbuS/neWtmOWcqHNlc3Npb25TdG9yYWdl5LitIC0tdG9rZW7lj6rlnKjlvZPliY3nvZHnq5nmiZPlvIDmnJ/pl7TnlJ/mlYgs5YW25LuW5o6l5Y+j5b+F6aG755m76ZmG5LmL5ZCO5omN6IO96K6/6ZeuCiAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cuc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgndG9rZW4nLCByZXNwb25zZS5kYXRhLmRhdGEpOyAvLyDmoLnmja7nlKjmiLflkI3mn6Xmib7nlKjmiLfkv6Hmga8KCiAgICAgICAgICAgICAgICAgICAgICB2YXIgY29uZiA9IHsKICAgICAgICAgICAgICAgICAgICAgICAgbWV0aG9kOiAnZ2V0JywKICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiAnL2FwaS91c2VyL2dldEJ5VXNlck5hbWUvJyArIHRoYXQubG9naW5Gb3JtLnVzZXJuYW1lLAogICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgJ0F1dGhvcml6YXRpb24nOiB3aW5kb3cuc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgndG9rZW4nKQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9OwoKICAgICAgICAgICAgICAgICAgICAgIHZhciBheGlvcyA9IHJlcXVpcmUoJ2F4aW9zJyk7CgogICAgICAgICAgICAgICAgICAgICAgYXhpb3MoY29uZikudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7CgogICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5jb2RlID09IDIwMCkgewogICAgICAgICAgICAgICAgICAgICAgICAgIHRoYXQuJHJvdXRlci5wdXNoKCcvaG9tZScpOyAvLyDosIPnlKjmlrnms5UKCiAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSwgdGhhdC5sb2dpbkZvcm0pOwogICAgICAgICAgICAgICAgICAgICAgICAgIHRoYXQuJHN0b3JlLmNvbW1pdCgndXNlci9zZXRfdXNlckluZm8nLCByZXNwb25zZS5kYXRhLmRhdGEpOwogICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGF0LiRtZXNzYWdlKHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNob3dDbG9zZTogdHJ1ZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICfnmbvlvZXmiJDlip8nLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnCiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoYXQuJG1lc3NhZ2UoewogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvd0Nsb3NlOiB0cnVlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ+eZu+W9leWksei0pScsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnZXJyb3InCiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0pWyJjYXRjaCJdKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhhdC4kbWVzc2FnZSh7CiAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvd0Nsb3NlOiB0cnVlLAogICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICfor7fmsYLplJnor68nLAogICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdlcnJvcicKICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoYXQuJG1lc3NhZ2UoewogICAgICAgICAgICAgICAgICAgICAgICBzaG93Q2xvc2U6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IHJlc3BvbnNlLmRhdGEubWVzc2FnZSwKICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2Vycm9yJwogICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9KVsiY2F0Y2giXShmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoYXQuJG1lc3NhZ2UoewogICAgICAgICAgICAgICAgICAgICAgc2hvd0Nsb3NlOiB0cnVlLAogICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ+ivt+axgumUmeivrycsCiAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnZXJyb3InCiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgICB9KSk7CgogICAgICAgIHJldHVybiBmdW5jdGlvbiAoX3gpIHsKICAgICAgICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgICAgfTsKICAgICAgfSgpKTsKICAgIH0sCiAgICAvLyDms6jlhozlh73mlbAKICAgIHJlZ2lzdGVyOiBmdW5jdGlvbiByZWdpc3RlcigpIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goJy9yZWdpc3RlcicpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"login_container\">\n        <div class=\"login_box\">\n        <!-- 头像区域 -->\n        <div class=\"avatar_box\">\n            <img src=\"../assets/logo.png\" alt=\"LogoCall\" />\n        </div>\n        <!-- 登录表单区域 -->\n        <el-form\n            ref=\"loginFormRef\"\n            class=\"login_form\"\n            label-width=\"0px\"\n            :model=\"loginForm\"\n            :rules=\"loginFormRules\"\n        >\n            <el-form-item prop=\"username\">\n            <el-input\n                v-model=\"loginForm.username\"\n                prefix-icon=\"el-icon-user-solid\"\n            ></el-input>\n            </el-form-item>\n            <el-form-item prop=\"password\">\n            <el-input\n                v-model=\"loginForm.password\"\n                type=\"password\"\n                prefix-icon=\"el-icon-lock\"\n            ></el-input>\n            </el-form-item>\n            <el-form-item class=\"btns\">\n                <el-button type=\"primary\" @click=\"register()\" style=\"margin-right: 28px\">注册</el-button>\n                <el-button type=\"primary\" @click=\"login('admin')\">管理员登录</el-button>\n                <el-button type=\"primary\" @click=\"login('common')\">用户登录</el-button>\n                <el-button type=\"info\" @click=\"resetLoginForm()\">重置</el-button>\n            </el-form-item>\n        </el-form>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n        // 登录表单数据绑定对象\n        loginForm: {\n            username: '',\n            password: '',\n        },\n        // 表单验证规则\n        loginFormRules: {\n            username: [\n                { required: true, message: '请输入用户名', trigger: 'blur' },\n            ],\n            password: [\n                { required: true, message: '请输入密码', trigger: 'blur' },\n            ],\n        },\n        }\n    },\n    methods: {\n        // 重置函数\n        resetLoginForm() {\n        console.log('重置函数：', 'resetLoginForm()')\n        // 获取表单的引用对象，然后调取表单的重置函数\n        this.$refs.loginFormRef.resetFields()\n        },\n        // 登录函数\n        login(kind) {\n            this.$refs.loginFormRef.validate(async (valid) => {\n                // 如果不合规范直接警告\n                if (!valid) return that.$message({showClose: true, message:'输入数据无效', type: 'warning'})\n                // 如果合乎规范就post，注意构造方法\n                var qs = require('qs')\n                var data = qs.stringify(this.loginForm)\n                if (kind == 'admin') {\n                    var url = '/api/user/adminLogin'\n                } else {\n                    var url = '/api/user/login'\n                }\n                var config = {\n                    method: 'post',\n                    url: url,\n                    headers: {\n                        'Content-Type': 'application/x-www-form-urlencoded',\n                    },\n                    data: data,\n                }\n                var that = this // 注意这里需要保存原来this\n                this.$http(config)\n                .then(function (response) {\n                    console.log(response.data, data, url)\n                    if (response.data.code == '200') {\n                        // 将登陆成功之后的token保存在sessionStorage中 --token只在当前网站打开期间生效,其他接口必须登陆之后才能访问\n                        window.sessionStorage.setItem('token', response.data.data)\n                        // 根据用户名查找用户信息\n                        var conf = {\n                                method: 'get',\n                                url: '/api/user/getByUserName/'+that.loginForm.username,\n                                headers: {\n                                    'Authorization': window.sessionStorage.getItem('token')\n                                },\n                            }\n                        var axios = require('axios');\n                        axios(conf)\n                        .then(function(response) {\n                            console.log(response.data)\n                            if (response.data.code == 200) {\n                                that.$router.push('/home')\n                                // 调用方法\n                                console.log(response.data, that.loginForm)\n                                that.$store.commit('user/set_userInfo', response.data.data)\n                                return that.$message({ showClose: true, message: '登录成功', type: 'success' })\n                            } else {\n                                return that.$message({showClose: true, message: '登录失败', type: 'error'})\n                            }\n                        })\n                        .catch(function(response) {\n                            return that.$message({showClose: true, message:'请求错误', type: 'error'})\n                        })\n                    } else {\n                        return that.$message({showClose: true, message: response.data.message, type: 'error'})\n                    }\n                    \n                })\n                .catch(function (error) {\n                    console.log(error)\n                    return that.$message({showClose: true, message:'请求错误', type: 'error'})\n                })\n            })\n        },\n        // 注册函数\n        register() {\n            this.$router.push('/register')\n        },\n    },\n    }\n</script>\n\n<style lang=\"less\" scoped>\n// scoped 表示css只在本组件生效\n.login_container {\n  background-color: gray;\n  height: 100%;\n}\n.login_box {\n  width: 450px;\n  height: 300px;\n  background-color: white;\n  border-radius: 3px;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n}\n.avatar_box {\n  height: 130px;\n  width: 130px;\n  border-radius: 50%;\n  border: 1px solid #eeeeee;\n  padding: 10px;\n  box-shadow: 0 0 10px #dddddd;\n  box-sizing: content-box;\n  //  居中显示\n  transform: translateY(-40%);\n  margin: auto;\n  // 居中显示2\n  /* position: absolute;\n  left: 50%;\n  transform: translate(-50%, -40%); */\n  background-color: white;\n  img {\n    height: 100px;\n    border-radius: 30%;\n    padding: 10% 10% 10% 6%;\n  }\n}\n\n// 表单位置显示\n.login_form {\n  padding: 0 20px;\n  position: absolute;\n  /* transform: translateY(-20%); */\n  box-sizing: border-box;\n  bottom: 0;\n  width: 100%;\n}\n// 靠右显示\n.btns {\n  display: flex;\n  justify-content: flex-end;\n}\n</style>\n"],"sourceRoot":"src/components"}]}