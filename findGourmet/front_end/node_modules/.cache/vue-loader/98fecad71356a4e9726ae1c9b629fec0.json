{"remainingRequest":"/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/src/components/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/src/components/Login.vue","mtime":1670655814062},{"path":"/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/node_modules/cache-loader/dist/cjs.js","mtime":1670653172899},{"path":"/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/node_modules/babel-loader/lib/index.js","mtime":1670653173065},{"path":"/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/node_modules/cache-loader/dist/cjs.js","mtime":1670653172899},{"path":"/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/node_modules/vue-loader/lib/index.js","mtime":1670653169666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAvLyDnmbvlvZXooajljZXmlbDmja7nu5Hlrprlr7nosaEKICAgICAgICBsb2dpbkZvcm06IHsKICAgICAgICAgICAgdXNlcm5hbWU6ICcnLAogICAgICAgICAgICBwYXNzd29yZDogJycsCiAgICAgICAgfSwKICAgICAgICAvLyDooajljZXpqozor4Hop4TliJkKICAgICAgICBsb2dpbkZvcm1SdWxlczogewogICAgICAgICAgICB1c2VybmFtZTogWwogICAgICAgICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+i+k+WFpeeUqOaIt+WQjScsIHRyaWdnZXI6ICdibHVyJyB9LAogICAgICAgICAgICBdLAogICAgICAgICAgICBwYXNzd29yZDogWwogICAgICAgICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+i+k+WFpeWvhueggScsIHRyaWdnZXI6ICdibHVyJyB9LAogICAgICAgICAgICBdLAogICAgICAgIH0sCiAgICAgICAgfQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICAvLyDph43nva7lh73mlbAKICAgICAgICByZXNldExvZ2luRm9ybSgpIHsKICAgICAgICBjb25zb2xlLmxvZygn6YeN572u5Ye95pWw77yaJywgJ3Jlc2V0TG9naW5Gb3JtKCknKQogICAgICAgIC8vIOiOt+WPluihqOWNleeahOW8leeUqOWvueixoe+8jOeEtuWQjuiwg+WPluihqOWNleeahOmHjee9ruWHveaVsAogICAgICAgIHRoaXMuJHJlZnMubG9naW5Gb3JtUmVmLnJlc2V0RmllbGRzKCkKICAgICAgICB9LAogICAgICAgIC8vIOeZu+W9leWHveaVsAogICAgICAgIGxvZ2luKGtpbmQpIHsKICAgICAgICAgICAgdGhpcy4kcmVmcy5sb2dpbkZvcm1SZWYudmFsaWRhdGUoYXN5bmMgKHZhbGlkKSA9PiB7CiAgICAgICAgICAgICAgICAvLyDlpoLmnpzkuI3lkIjop4TojIPnm7TmjqXorablkYoKICAgICAgICAgICAgICAgIGlmICghdmFsaWQpIHJldHVybiB0aGF0LiRtZXNzYWdlKHtzaG93Q2xvc2U6IHRydWUsIG1lc3NhZ2U6J+i+k+WFpeaVsOaNruaXoOaViCcsIHR5cGU6ICd3YXJuaW5nJ30pCiAgICAgICAgICAgICAgICAvLyDlpoLmnpzlkIjkuY7op4TojIPlsLFwb3N077yM5rOo5oSP5p6E6YCg5pa55rOVCiAgICAgICAgICAgICAgICB2YXIgcXMgPSByZXF1aXJlKCdxcycpCiAgICAgICAgICAgICAgICB2YXIgZGF0YSA9IHFzLnN0cmluZ2lmeSh0aGlzLmxvZ2luRm9ybSkKICAgICAgICAgICAgICAgIGlmIChraW5kID09ICdhZG1pbicpIHsKICAgICAgICAgICAgICAgICAgICB2YXIgdXJsID0gJy9hcGkvdXNlci9hZG1pbkxvZ2luJwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICB2YXIgdXJsID0gJy9hcGkvdXNlci9sb2dpbicKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHZhciBjb25maWcgPSB7CiAgICAgICAgICAgICAgICAgICAgbWV0aG9kOiAncG9zdCcsCiAgICAgICAgICAgICAgICAgICAgdXJsOiB1cmwsCiAgICAgICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCcsCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBkYXRhOiBkYXRhLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgdmFyIHRoYXQgPSB0aGlzIC8vIOazqOaEj+i/memHjOmcgOimgeS/neWtmOWOn+adpXRoaXMKICAgICAgICAgICAgICAgIHRoaXMuJGh0dHAoY29uZmlnKQogICAgICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSwgZGF0YSwgdXJsKQogICAgICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhLmNvZGUgPT0gJzIwMCcpIHsKICAgICAgICAgICAgICAgICAgICAgICAgLy8g5bCG55m76ZmG5oiQ5Yqf5LmL5ZCO55qEdG9rZW7kv53lrZjlnKhzZXNzaW9uU3RvcmFnZeS4rSAtLXRva2Vu5Y+q5Zyo5b2T5YmN572R56uZ5omT5byA5pyf6Ze055Sf5pWILOWFtuS7luaOpeWPo+W/hemhu+eZu+mZhuS5i+WQjuaJjeiDveiuv+mXrgogICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cuc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgndG9rZW4nLCByZXNwb25zZS5kYXRhLmRhdGEpCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOagueaNrueUqOaIt+WQjeafpeaJvueUqOaIt+S/oeaBrwogICAgICAgICAgICAgICAgICAgICAgICB2YXIgY29uZiA9IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXRob2Q6ICdnZXQnLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybDogJy9hcGkvdXNlci9nZXRCeVVzZXJOYW1lLycrdGhhdC5sb2dpbkZvcm0udXNlcm5hbWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnQXV0aG9yaXphdGlvbic6IHdpbmRvdy5zZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCd0b2tlbicpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGF4aW9zID0gcmVxdWlyZSgnYXhpb3MnKTsKICAgICAgICAgICAgICAgICAgICAgICAgYXhpb3MoY29uZikKICAgICAgICAgICAgICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5jb2RlID09IDIwMCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoYXQuJHJvdXRlci5wdXNoKCcvaG9tZScpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g6LCD55So5pa55rOVCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSwgdGhhdC5sb2dpbkZvcm0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhhdC4kc3RvcmUuY29tbWl0KCd1c2VyL3NldF91c2VySW5mbycsIHJlc3BvbnNlLmRhdGEuZGF0YSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhhdC4kbWVzc2FnZSh7IHNob3dDbG9zZTogdHJ1ZSwgbWVzc2FnZTogJ+eZu+W9leaIkOWKnycsIHR5cGU6ICdzdWNjZXNzJyB9KQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhhdC4kbWVzc2FnZSh7c2hvd0Nsb3NlOiB0cnVlLCBtZXNzYWdlOiAn55m75b2V5aSx6LSlJywgdHlwZTogJ2Vycm9yJ30pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgICAgIC5jYXRjaChmdW5jdGlvbihyZXNwb25zZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoYXQuJG1lc3NhZ2Uoe3Nob3dDbG9zZTogdHJ1ZSwgbWVzc2FnZTon6K+35rGC6ZSZ6K+vJywgdHlwZTogJ2Vycm9yJ30pCiAgICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoYXQuJG1lc3NhZ2Uoe3Nob3dDbG9zZTogdHJ1ZSwgbWVzc2FnZTogcmVzcG9uc2UuZGF0YS5tZXNzYWdlLCB0eXBlOiAnZXJyb3InfSkKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKQogICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGF0LiRtZXNzYWdlKHtzaG93Q2xvc2U6IHRydWUsIG1lc3NhZ2U6J+ivt+axgumUmeivrycsIHR5cGU6ICdlcnJvcid9KQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgfSkKICAgICAgICB9LAogICAgICAgIC8vIOazqOWGjOWHveaVsAogICAgICAgIHJlZ2lzdGVyKCkgewogICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnL3JlZ2lzdGVyJykKICAgICAgICB9LAogICAgfSwKICAgIH0K"},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"login_container\">\n        <div class=\"login_box\">\n        <!-- 头像区域 -->\n        <div class=\"avatar_box\">\n            <img src=\"../assets/logo.png\" alt=\"LogoCall\" />\n        </div>\n        <!-- 登录表单区域 -->\n        <el-form\n            ref=\"loginFormRef\"\n            class=\"login_form\"\n            label-width=\"0px\"\n            :model=\"loginForm\"\n            :rules=\"loginFormRules\"\n        >\n            <el-form-item prop=\"username\">\n            <el-input\n                v-model=\"loginForm.username\"\n                prefix-icon=\"el-icon-user-solid\"\n            ></el-input>\n            </el-form-item>\n            <el-form-item prop=\"password\">\n            <el-input\n                v-model=\"loginForm.password\"\n                type=\"password\"\n                prefix-icon=\"el-icon-lock\"\n            ></el-input>\n            </el-form-item>\n            <el-form-item class=\"btns\">\n                <el-button type=\"primary\" @click=\"register()\" style=\"margin-right: 28px\">注册</el-button>\n                <el-button type=\"primary\" @click=\"login('admin')\">管理员登录</el-button>\n                <el-button type=\"primary\" @click=\"login('common')\">用户登录</el-button>\n                <el-button type=\"info\" @click=\"resetLoginForm()\">重置</el-button>\n            </el-form-item>\n        </el-form>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n        // 登录表单数据绑定对象\n        loginForm: {\n            username: '',\n            password: '',\n        },\n        // 表单验证规则\n        loginFormRules: {\n            username: [\n                { required: true, message: '请输入用户名', trigger: 'blur' },\n            ],\n            password: [\n                { required: true, message: '请输入密码', trigger: 'blur' },\n            ],\n        },\n        }\n    },\n    methods: {\n        // 重置函数\n        resetLoginForm() {\n        console.log('重置函数：', 'resetLoginForm()')\n        // 获取表单的引用对象，然后调取表单的重置函数\n        this.$refs.loginFormRef.resetFields()\n        },\n        // 登录函数\n        login(kind) {\n            this.$refs.loginFormRef.validate(async (valid) => {\n                // 如果不合规范直接警告\n                if (!valid) return that.$message({showClose: true, message:'输入数据无效', type: 'warning'})\n                // 如果合乎规范就post，注意构造方法\n                var qs = require('qs')\n                var data = qs.stringify(this.loginForm)\n                if (kind == 'admin') {\n                    var url = '/api/user/adminLogin'\n                } else {\n                    var url = '/api/user/login'\n                }\n                var config = {\n                    method: 'post',\n                    url: url,\n                    headers: {\n                        'Content-Type': 'application/x-www-form-urlencoded',\n                    },\n                    data: data,\n                }\n                var that = this // 注意这里需要保存原来this\n                this.$http(config)\n                .then(function (response) {\n                    console.log(response.data, data, url)\n                    if (response.data.code == '200') {\n                        // 将登陆成功之后的token保存在sessionStorage中 --token只在当前网站打开期间生效,其他接口必须登陆之后才能访问\n                        window.sessionStorage.setItem('token', response.data.data)\n                        // 根据用户名查找用户信息\n                        var conf = {\n                                method: 'get',\n                                url: '/api/user/getByUserName/'+that.loginForm.username,\n                                headers: {\n                                    'Authorization': window.sessionStorage.getItem('token')\n                                },\n                            }\n                        var axios = require('axios');\n                        axios(conf)\n                        .then(function(response) {\n                            console.log(response.data)\n                            if (response.data.code == 200) {\n                                that.$router.push('/home')\n                                // 调用方法\n                                console.log(response.data, that.loginForm)\n                                that.$store.commit('user/set_userInfo', response.data.data)\n                                return that.$message({ showClose: true, message: '登录成功', type: 'success' })\n                            } else {\n                                return that.$message({showClose: true, message: '登录失败', type: 'error'})\n                            }\n                        })\n                        .catch(function(response) {\n                            return that.$message({showClose: true, message:'请求错误', type: 'error'})\n                        })\n                    } else {\n                        return that.$message({showClose: true, message: response.data.message, type: 'error'})\n                    }\n                    \n                })\n                .catch(function (error) {\n                    console.log(error)\n                    return that.$message({showClose: true, message:'请求错误', type: 'error'})\n                })\n            })\n        },\n        // 注册函数\n        register() {\n            this.$router.push('/register')\n        },\n    },\n    }\n</script>\n\n<style lang=\"less\" scoped>\n// scoped 表示css只在本组件生效\n.login_container {\n  background-color: gray;\n  height: 100%;\n}\n.login_box {\n  width: 450px;\n  height: 300px;\n  background-color: white;\n  border-radius: 3px;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n}\n.avatar_box {\n  height: 130px;\n  width: 130px;\n  border-radius: 50%;\n  border: 1px solid #eeeeee;\n  padding: 10px;\n  box-shadow: 0 0 10px #dddddd;\n  box-sizing: content-box;\n  //  居中显示\n  transform: translateY(-40%);\n  margin: auto;\n  // 居中显示2\n  /* position: absolute;\n  left: 50%;\n  transform: translate(-50%, -40%); */\n  background-color: white;\n  img {\n    height: 100px;\n    border-radius: 30%;\n    padding: 10% 10% 10% 6%;\n  }\n}\n\n// 表单位置显示\n.login_form {\n  padding: 0 20px;\n  position: absolute;\n  /* transform: translateY(-20%); */\n  box-sizing: border-box;\n  bottom: 0;\n  width: 100%;\n}\n// 靠右显示\n.btns {\n  display: flex;\n  justify-content: flex-end;\n}\n</style>\n"]}]}