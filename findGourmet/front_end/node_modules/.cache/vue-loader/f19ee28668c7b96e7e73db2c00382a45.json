{"remainingRequest":"/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/src/components/CheckFee.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/src/components/CheckFee.vue","mtime":1608238814000},{"path":"/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/node_modules/cache-loader/dist/cjs.js","mtime":1670653172899},{"path":"/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/node_modules/babel-loader/lib/index.js","mtime":1670653173065},{"path":"/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/node_modules/cache-loader/dist/cjs.js","mtime":1670653172899},{"path":"/Users/tongchen/Downloads/findGourmet_web/findGourmet/front_end/node_modules/vue-loader/lib/index.js","mtime":1670653169666}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["CheckFee.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"CheckFee.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div style=\"height: 100%\">\n        <!-- 面包屑 -->\n        <el-breadcrumb separator-class=\"el-icon-arrow-right\" style=\"margin-bottom: 10px\">\n            <el-breadcrumb-item :to=\"{ path: '/welcome' }\">首页</el-breadcrumb-item>\n            <el-breadcrumb-item>查询成功请求信息</el-breadcrumb-item>\n        </el-breadcrumb>\n        <!-- 信息主体 -->\n        <h2>中介费用明细表</h2>\n        <el-card>\n            <div class=\"selectTimeblock\">\n                <el-date-picker\n                    v-model=\"value\"\n                    type=\"daterange\"\n                    range-separator=\"至\"\n                    start-placeholder=\"开始日期\"\n                    end-placeholder=\"结束日期\"\n                    value-format=\"yyyy-MM-dd\">\n                </el-date-picker>\n                <el-button type=\"primary\" @click=\"checkFee('byDate')\" :disabled=\"!value\">查询</el-button>\n                <el-select v-model=\"city\" placeholder=\"请选择查询城市\" >\n                    <!-- 动态获取城市类型下拉列表 -->\n                    <el-option\n                        v-for=\"item in cityOption\"\n                        :key=\"item.cityId\"\n                        :label=\"item.cityName\"\n                        :value=\"item.cityName\"\n                    >\n                    </el-option>\n                </el-select>\n                <el-button type=\"primary\" @click=\"checkFee('byLocation')\" :disabled=\"!value || this.city == ''\">指定城市查询</el-button>\n            </div>\n            <el-table :data=\"tableData\" :header-cell-style=\"{'text-align':'center'}\" \n                      :cell-style=\"{'text-align':'center'}\" border>\n                <el-table-column prop=\"date\" label=\"时间\" width=\"150\"></el-table-column>\n                <el-table-column prop=\"type\" label=\"类型\" width=\"100\"></el-table-column>\n                <el-table-column prop=\"fee\" label=\"中介费用\" sortable width=\"150\"></el-table-column>\n                <el-table-column prop=\"count\" label=\"成交单数\" sortable width=\"150\"></el-table-column>\n                <el-table-column prop=\"zone\" label=\"地区\" width=\"100\"></el-table-column>\n            </el-table>\n        </el-card>\n        <div id=\"chart_example\">\n        </div>\n        <div id=\"chartCnt_example\">\n        </div>\n    </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts'\nexport default {\n    data() {\n        return {\n            value: [],          // 时间范围\n            cityOption: [\n                // {\n                //     \"cityId\": 1,\n                //     \"cityName\": \"北京\"\n                // },\n                // {\n                //     \"cityId\": 2,\n                //     \"cityName\": \"上海\"\n                // }\n            ],     // 城市选择\n            city: '',           // 所选城市\n            month: [],          // 超过30天改成统计月份\n\n            tableData: [],          // el-table数据\n            page: 1,                // 数据页数\n            rows: 10,               // 每页行数\n            total: 0,               // 数据总数\n\n            option: {},\n            optionCnt: {},\n            // type: ['技术交流', '学业探讨', '社会实践', '公益志愿者', '游玩'],\n            type: [],\n            color: ['#85adad', '#FA6F53', '#99b3ff', '#ffff80', '#ffcc80'],\n            series: [],\n            seriesCnt: [],\n            myChart: '',\n            myChartCnt: '',\n        }\n    },\n    created() {\n        this.getCityList()\n        var that = this\n        this.$http.get(\"/call/getCallType\", {\n                headers: {\n                    'Authorization': window.sessionStorage.getItem('token') \n                }\n        })\n        .then(function(response) {\n            if (response.data.code == 200) {\n                for(var i = 0; i < response.data.data.length; i++) {\n                    that.type.push(response.data.data[i]['callTypeName'])\n                }\n            } else {\n                that.$message({showClose: true, message: response.data.message, type: 'warning'})\n            }\n        })\n        .catch(function(error) {\n            console.log(error)\n            that.$message({showClose: true, message: \"请求召集令类型列表错误\", type: 'error'})\n        })\n        \n        this.value[0] = this.getDate(-3)\n        this.value[1] = this.getDate(3)\n        // 指定图表的配置项和数据\n        for (var i = 0; i < 5; ++ i) {\n            this.series[i] = {\n                name: this.type[i],\n                type: 'line',\n                lineStyle: { color: this.color[i] }\n            }\n        }\n        this.option = {\n            title: {\n                text: '所有城市中介费用随着时间变化折线图',\n                x: 'center',\n                y: 'top',\n                textAlign: 'left',\n                textStyle: {\"fontSize\": 18,\"fontWeight\": \"bolder\",\"color\": \"#333\"} \n            },\n            tooltip: {              //设置tip提示\n                trigger: 'axis'\n            },\n            legend: {               \n                data: this.type,     //设置区分（哪条线属于什么）和color对应\n                bottom: '0'\n            },\n            color: this.color,      \n            xAxis: {                //设置x轴\n                boundaryGap: false,     //坐标轴两边不留白\n                data: [],\n                name: '日期',           //X轴 name\n                nameTextStyle: {        //坐标轴名称的文字样式\n                    color: '#FA6F53',\n                    fontSize: 16,\n                    padding: [0, 0, 0, 20]\n                },\n                axisLine: {             //坐标轴轴线相关设置。\n                    lineStyle: {\n                        color: '#FA6F53',\n                    }\n                },\n                type: 'category'\n            },\n            yAxis: {\n                name: '中介费',\n                nameTextStyle: {\n                    color: '#FA6F53',\n                    fontSize: 16,\n                    padding: [0, 0, 10, 0]\n                },\n                axisLine: {\n                    lineStyle: {\n                        color: '#FA6F53',\n                    },\n                    show: true,\n                },\n                type: 'value'\n            },\n            series: this.series\n        },\n        // 涉及到深拷贝和浅拷贝问题\n        this.optionCnt = JSON.parse(JSON.stringify(this.option))\n        this.optionCnt['yAxis']['name'] = '成交单数'\n        this.optionCnt['title']['text'] = '所有城市成交单数随时间变化折线图'\n    },\n    async mounted() {\n        this.myChart = echarts.init(document.getElementById('chart_example'));\n        \n        this.myChartCnt = echarts.init(document.getElementById('chartCnt_example'));\n\n        this.checkFee('byDate')\n        console.log('mounted', this.tableData)\n\n        /* if (window.sessionStorage.getItem('option') != null) {\n            this.option = JSON.parse(window.sessionStorage.getItem('option'))\n        } */\n        this.myChart.setOption(this.option);\n        window.addEventListener('resize',function() {this.myChart.resize()});\n        \n        /* if (window.sessionStorage.getItem('optionCnt') != null) {\n            this.optionCnt = JSON.parse(window.sessionStorage.getItem('optionCnt'))\n        } */\n        this.myChartCnt.setOption(this.optionCnt);\n        // 建议加上以下这一行代码，不加的效果图如下（当浏览器窗口缩小的时候）。超过了div的界限（红色边框）\n        window.addEventListener('resize',function() {this.myChartCnt.resize()});\n    },\n    methods: {\n        // 获取当前前几天后者后几天日期\n        getDate(day) {\n            function doHandleMonth(month){\n                var m = month;\n                if(month.toString().length == 1){\n                    m = \"0\" + month;\n                }\n                return m;\n            }\n            var today = new Date();\n            var targetday_milliseconds=today.getTime() + 1000*60*60*24*day;\n            today.setTime(targetday_milliseconds); //注意，这行是关键代码\n            var tYear = today.getFullYear();\n            var tMonth = today.getMonth();\n            var tDate = today.getDate();\n            tMonth = doHandleMonth(tMonth + 1);\n            tDate = doHandleMonth(tDate);\n            return tYear+\"-\"+tMonth+\"-\"+tDate;\n        },\n        async checkFee(flag) {\n            function show(ymd) {\n                console.log(ymd)\n            }\n            this.option['xAxis'].data = []\n            this.optionCnt['xAxis'].data = []\n            this.month.length = 0\n            \n            var i = 0;\n            var start = new Date(this.value[0]);\n            var end = new Date(this.value[1]);\n            do {\n                // show(start.getFullYear()+\"-\"+(start.getMonth()+1)+\"-\"+start.getDate());\n                var m = start.getFullYear()+\"-\"+(start.getMonth()+1);\n                if (this.month.indexOf(m) == -1) {\n                    this.month.push(m)\n                    console.log(start.getMonth())\n                }\n                this.option['xAxis'].data.push(start.getFullYear()+\"-\"+(start.getMonth()+1)+\"-\"+start.getDate())\n                this.optionCnt['xAxis'].data.push(start.getFullYear()+\"-\"+(start.getMonth()+1)+\"-\"+start.getDate())\n                ++ i;\n                start.setDate(start.getDate()+1);\n            } while(end >= start);\n\n            \n            console.log(flag+ ' checkFee() days', i, this.month)\n            var that = this\n            if (flag == 'byDate') {\n                if (i <= 30) {\n                    var response  = await this.$http.get(`/income/getIncomeByDayTimeByType/${this.value[0]}/${this.value[1]}`, {\n                        headers: {\n                            'Authorization': window.sessionStorage.getItem('token')\n                        }\n                    })\n                } else {\n                    this.option['xAxis'].data = this.month\n                    this.optionCnt['xAxis'].data = this.month\n                    var response  = await this.$http.get(`/income/getIncomeByMonthTimeByType/${this.month[0]}/${this.month[this.month.length - 1]}`, {\n                        headers: {\n                            'Authorization': window.sessionStorage.getItem('token')\n                        }\n                    })\n                    console.log(this.month)\n                }\n                this.city = ''\n                this.option['title']['text'] = '中介费用随时间变化折线图'\n                this.optionCnt['title']['text'] = '成交单数随时间变化折线图'\n            } else if (flag == 'byLocation') {\n                if (i <= 30) {\n                    var response  = await this.$http.get(`/income/getIncomeByDayTimeByLocation/${this.value[0]}/${this.value[1]}/${this.city}`, {\n                        headers: {\n                            'Authorization': window.sessionStorage.getItem('token')\n                        }\n                    })\n                } else {\n                    this.option['xAxis'].data = this.month\n                    this.optionCnt['xAxis'].data = this.month\n                    var response  = await this.$http.get(`/income/getIncomeByMonthTimeByLocation/${this.month[0]}/${this.month[this.month.length - 1]}/${this.city}`, {\n                        headers: {\n                            'Authorization': window.sessionStorage.getItem('token')\n                        }\n                    })\n                }\n                this.option['title']['text'] = this.city + '的中介费用随时间变化折线图'\n                this.optionCnt['title']['text'] = this.city + '的成交单数随时间变化折线图'\n            }\n            \n            if (response.data.code != 200) {\n                return that.$message({showClose: true, message: response.data.message, type: 'warning'})\n            } else {\n                var res = response.data.data\n                var days = res.length\n                this.series = new Array(5)\n                for (var i = 0; i < 5; ++ i) {\n                    var data = new Array(days).fill(0)\n                    this.series[i] = {\n                        name: this.type[i],\n                        data: data,\n                        type: 'line',\n                        lineStyle: { color: this.color[i] }\n                    }\n                    var dataCnt = new Array(days).fill(0)\n                    this.seriesCnt[i] = {\n                        name: this.type[i],\n                        data: dataCnt,\n                        type: 'line',\n                        lineStyle: { color: this.color[i] }\n                    }\n                }\n                this.tableData = []\n                for(var i = 0; i < res.length; ++ i) {  // 第i天\n                    var fee = 0\n                    var cnt = 0\n                    for(var j = 0; j < res[i].length; ++ j) {   // 是res[i][j]['name']类\n                        var kind = this.type.indexOf(res[i][j]['name'])\n                        this.series[kind]['data'][i] = res[i][j]['money']\n                        fee += res[i][j]['money']\n                        \n                        var kind = this.type.indexOf(res[i][j]['name'])\n                        this.seriesCnt[kind]['data'][i] = res[i][j]['count']\n                        cnt += res[i][j]['count']\n                    }\n                    if (this.city == '') {\n                        var zone = '所有城市'\n                    } else {\n                        var zone = this.city\n                    }\n                    this.tableData.push({\n                        'date': this.option['xAxis'].data[i],\n                        'type': '所有类型',\n                        'fee': fee,\n                        'count': cnt,\n                        'zone': zone\n                    })\n                }\n                console.log(this.tableData)\n                this.option['series'] = this.series\n                this.optionCnt['series'] = this.seriesCnt\n                this.drawChart()\n            }  \n        },\n        getCityList() {\n            var that = this\n            this.$http.get('/user/getCitys')\n            .then(function(response) {\n                if (response.data.code == 200) {\n                    that.cityOption = response.data.data\n                } else {\n                    that.$message({showClose: true, message: response.data.message, type: 'warning'})\n                }\n            })\n            .catch(function(response) {\n                that.$message({showClose: true, message: \"请求错误\", type: 'error'})\n            })\n        },\n        // echarts\n        drawChart() {\n            this.myChart.setOption(this.option);\n            this.myChartCnt.setOption(this.optionCnt);\n\n            /* window.sessionStorage.setItem('option', JSON.stringify(this.option))\n            window.sessionStorage.setItem('optionCnt', JSON.stringify(this.optionCnt))\n            window.sessionStorage.setItem('startTime', this.value[0])\n            window.sessionStorage.setItem('endTime', this.value[1])\n            window.sessionStorage.setItem('city', this.city) */\n        }\n    }\n    \n}\n</script>\n\n<style lang=\"less\" scoped>\nh2 {\n    text-align: center;\n    // padding: 30px;\n    // font-size: 18px;\n}\n\n.selectTimeblock {\n    margin-bottom: 10px;\n    > .el-button {\n        margin-left: 5px;\n    }\n    > .el-select {\n        margin-left: 5px;\n    }\n}\n\n.el-table {\n    width: 650px;\n}\n\n#chart_example{\n    width: 50%;\n    height: 500px;\n    // border: 1px solid red;\n    margin: 0 auto;\n    float: left;\n    margin-top: 20px;\n}\n\n#chartCnt_example{\n    width: 50%;\n    height: 500px;\n    // border: 1px solid red;\n    margin: 0 auto;\n    float: right;\n    margin-top: 20px;\n}\n</style>"]}]}